{"version":3,"sources":["utils/validator.ts","components/field/field.tsx","components/login-form/login-form.tsx","components/register-form/register-form.tsx","utils/consts.ts","api/login.ts","actions/game.ts","actions/auth.ts","actions/records.ts","pages/login/login.tsx","api/records.ts","components/modal/description/description.tsx","components/modal/modal.tsx","components/modal/final/final.tsx","components/header/header.tsx","components/game-field/cube/cube.tsx","components/game-field/game-field.tsx","components/table/table.tsx","pages/main/main.tsx","components/app/app.tsx","reportWebVitals.ts","reducers/game.ts","reducers/auth.ts","reducers/records.ts","reducers/index.ts","index.tsx"],"names":["maxLength","message","RenderTextField","label","input","meta","touched","invalid","error","custom","TextField","variant","helperText","minLength","value","trim","length","regExpCheck","reg","test","requireField","passwordLevel","count","ReduxFormLogin","reduxForm","form","props","setStateForm","handleSubmit","onSubmit","className","Field","validate","name","component","type","Box","Button","onClick","minLengthFieldLogin","minLengthFieldName","minLengthFieldPassword","regFieldLogin","regFieldName","regFieldPassword","maxLengthField","ReduxFormRegister","START","PAUSE","TIME","POINTS","LOGIN","LOGOUT","RECORDS","URL","instance","axios","create","baseURL","timeout","headers","startAction","start","status","setPoints","points","loginActions","id","logoutActions","actionsRecords","records","user","Login","useState","stateForm","loginError","setLoginError","serverError","setServerError","dispatch","useDispatch","useEffect","body","post","then","res","data","userId","catch","err","response","console","log","getRecords","Description","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","top","left","transform","position","width","Elements","TransitionsModal","handleOpen","handleClose","classes","Body","Modal","open","onClose","aria-labelledby","aria-describedby","Settings","setModal","useSelector","state","game","auth","final","color","alert","settings","revers","Header","flag","view","time","setTime","pause","min","Math","floor","sec","timeSet","clearTimeout","setTimeout","disabled","pauseAction","src","alt","variants","Cube","hp","coordinates","rotation","style","randomNumber","max","round","random","createCube","heigth","numberOptions","addCube","cubes","size","number","push","GameField","warning","setState","ref","useRef","current","clientWidth","clientHeight","window","addEventListener","target","arr","Object","assign","splice","map","el","index","Table","e","i","MainPage","App","path","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","startState","defult","gameReducer","action","authReducer","recordsReducer","allReducer","combineReducers","reducer","store","createStore","reducers","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f3890914.chunk.js","sourcesContent":["export const maxLength = (maxLength: number, message?: string) => (value: string = ''): void | string => {\r\n  if (maxLength < value.trim().length) return message || `There are too many characters in the field. Max length ${maxLength}`\r\n}\r\n\r\nexport const minLength = (minLength: number, message?: string) => (value: string = ''): void | string => {\r\n  if (minLength > value.trim().length) return message || `Too few characters in the field. Min length ${minLength}`\r\n}\r\n\r\nexport const regExpCheck = (reg: RegExp, message?: string) => (value: string = ''): void | string => {\r\n  if (!reg.test(value.trim())) return message || `Value is incorrect. ${reg}`\r\n}\r\n\r\nexport const requireField = (value: string = ''): void | string => {\r\n  if (!value.trim()) return \"Field is required\";\r\n}\r\n\r\nexport const passwordLevel = (value: string): void | string => {\r\n  let count: number = 0;\r\n\r\n  count += /[a-z]/.test(value) ? 1 : 0;\r\n  count += /[A-Z]/.test(value) ? 1 : 0;\r\n  count += /\\d/.test(value) ? 1 : 0;\r\n\r\n  if (count < 3) {\r\n    return \"Password is not strong\";\r\n  }\r\n}","import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { iTextField } from \"../../type\";\r\n\r\n\r\nconst RenderTextField: React.FC<iTextField> = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    variant=\"outlined\"\r\n    label={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n)\r\n\r\nexport default RenderTextField;","import React from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport RenderTextField from \"../field\";\r\nimport { requireField } from \"../../utils/validator\";\r\nimport { iPropsForm } from \"../../type\";\r\n\r\n\r\nconst Form: React.FC<iPropsForm & InjectedFormProps<{}, iPropsForm>> = (props) => {\r\n  const { setStateForm, handleSubmit } = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <h2 className=\"form__title\">Login</h2>\r\n\r\n      <Field validate={[requireField]} name=\"login\" label=\"Login/email\" component={RenderTextField}></Field>\r\n      <Field validate={[requireField]} name=\"password\" type=\"password\" label=\"Password\" component={RenderTextField}></Field>\r\n\r\n      <Box  >\r\n        <Button className=\"form__btn\" variant=\"contained\" type=\"submit\">Login</Button>\r\n      </Box>\r\n      <Box >\r\n        <Button className=\"form__btn\" variant=\"contained\" onClick={() => setStateForm(false)}>Register</Button>\r\n      </Box>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxFormLogin = reduxForm<{}, iPropsForm>({\r\n  form: \"login\"\r\n})(Form)\r\n\r\nexport default ReduxFormLogin;","import React from \"react\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport RenderTextField from \"../field\";\r\nimport { requireField, maxLength, minLength, regExpCheck, passwordLevel } from \"../../utils/validator\";\r\nimport { iPropsForm } from \"../../type\";\r\n\r\n\r\nconst minLengthFieldLogin = minLength(2)\r\nconst minLengthFieldName = minLength(5)\r\nconst minLengthFieldPassword = minLength(8)\r\n\r\nconst regFieldLogin = regExpCheck(/^[a-z@.]{2,15}$/)\r\nconst regFieldName = regExpCheck(/^[A-Za-z][A-Za-z0-9_]{5,15}$/)\r\nconst regFieldPassword = regExpCheck(/^[a-zA-Z0-9]{8,15}$/)\r\n\r\nconst maxLengthField = maxLength(15)\r\n\r\n\r\nconst Form: React.FC<iPropsForm & InjectedFormProps<{}, iPropsForm>> = (props) => {\r\n  const { setStateForm, handleSubmit } = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <h2 className=\"form__title\">Register</h2>\r\n\r\n      <Field validate={[requireField, minLengthFieldName, maxLengthField, regFieldName]} name=\"name\" label=\"Name\" component={RenderTextField}></Field>\r\n      <Field validate={[requireField, minLengthFieldLogin, maxLengthField, regFieldLogin]} name=\"login\" label=\"Login/email\" component={RenderTextField}></Field>\r\n      <Field validate={[requireField, minLengthFieldPassword, maxLengthField, regFieldPassword, passwordLevel]} name=\"password\" type=\"password\" label=\"Password\" component={RenderTextField}></Field>\r\n\r\n      <Box>\r\n        <Button className=\"form__btn\" variant=\"contained\" type=\"submit\">Register</Button>\r\n      </Box>\r\n      <Box>\r\n        <Button className=\"form__btn\" variant=\"contained\" onClick={() => setStateForm(true)}>Login</Button>\r\n      </Box>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxFormRegister = reduxForm<{}, iPropsForm>({\r\n  form: \"register\"\r\n})(Form)\r\n\r\nexport default ReduxFormRegister;","export const START = \"START\";\r\nexport const PAUSE = \"PAUSE\";\r\nexport const TIME = \"TIME\";\r\nexport const POINTS = \"POINTS\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const RECORDS = \"RECORDS\";\r\nexport const URL = \"http://localhost:3001/\";","import axios from \"axios\"\r\nimport { ILogin } from \"../type\"\r\nimport { URL } from \"../utils/consts\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: URL,\r\n  timeout: 1000,\r\n  headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n})\r\n\r\n\r\nexport const login = (body: ILogin) => {\r\n  return instance.post(\"login\", body)\r\n}\r\n\r\nexport const register = (body: ILogin) => {\r\n  return instance.post(\"register\", body)\r\n}\r\n","import { PAUSE, START, TIME, POINTS } from \"../utils/consts\";\r\nimport { actionGame } from \"../type/\";\r\n\r\nexport const startAction = (start: boolean): actionGame => {\r\n  return {\r\n    type: START,\r\n    status: start\r\n  }\r\n}\r\n\r\n\r\nexport const pauseAction = (pause: boolean): actionGame => {\r\n  return {\r\n    type: PAUSE,\r\n    status: pause\r\n  }\r\n}\r\n\r\n\r\nexport const setTime = (time: number): actionGame => {\r\n  return {\r\n    type: TIME,\r\n    time: time\r\n  }\r\n}\r\n\r\n\r\nexport const setPoints = (points: number): actionGame => {\r\n  return {\r\n    type: POINTS,\r\n    points: points\r\n  }\r\n}","import { actionAuth } from \"../type\"\r\nimport { LOGIN, LOGOUT } from \"../utils/consts\"\r\n\r\nexport const loginActions = (id: string): actionAuth => {\r\n  return {\r\n    type: LOGIN,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const logoutActions = (): actionAuth => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}","import { actionRecords, iListRecords } from \"../type\"\r\nimport { RECORDS } from \"../utils/consts\"\r\n\r\n\r\nexport const actionsRecords = (records: iListRecords[], user: iListRecords): actionRecords => {\r\n  return {\r\n    type: RECORDS,\r\n    records: records,\r\n    user: user\r\n  }\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport ReduxFormLogin from \"../../components/login-form\"\r\nimport ReduxFormRegister from \"../../components/register-form\"\r\nimport { ILogin } from \"../../type\";\r\n\r\nimport { login, register } from \"../../api/login\";\r\n\r\nimport \"./loginStyle.scss\";\r\nimport { loginActions } from \"../../actions\";\r\n\r\n\r\nconst Login: React.FC = () => {\r\n  const [stateForm, setStateForm] = useState<boolean>(true);\r\n  const [loginError, setLoginError] = useState<boolean>(false);\r\n  const [serverError, setServerError] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    setLoginError(false)\r\n    setServerError(false)\r\n  }, [stateForm])\r\n\r\n  const sendLogin: any = (value: ILogin) => {\r\n    login(value).then(res => {\r\n\r\n      dispatch(loginActions(res.data.userId))\r\n\r\n    }).catch(err => {\r\n      const { response } = err;\r\n\r\n      console.log(response);\r\n\r\n\r\n      if (response?.status === 400) {\r\n        setLoginError(true)\r\n      } else {\r\n        setServerError(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const sendRegister: any = (value: ILogin) => {\r\n    register(value).then(res => {\r\n\r\n      dispatch(loginActions(res.data.userId))\r\n\r\n    }).catch(err => {\r\n      const { response } = err;\r\n\r\n      if (response?.status === 400) {\r\n        setLoginError(true)\r\n      } else {\r\n        setServerError(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        stateForm ?\r\n          <ReduxFormLogin onSubmit={sendLogin} setStateForm={setStateForm} /> :\r\n          <ReduxFormRegister onSubmit={sendRegister} setStateForm={setStateForm} />\r\n      }\r\n      <div className=\"error\">\r\n        {\r\n          loginError && stateForm ? <p>Login error. Incorrect password or login</p> : \"\"\r\n        }\r\n        {\r\n          loginError && !stateForm ? <p>login is already taken</p> : \"\"\r\n        }\r\n        {\r\n          serverError ? <p>Server error</p> : \"\"\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;","import axios from \"axios\"\r\nimport { ILogin } from \"../type\"\r\nimport { URL } from \"../utils/consts\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: URL + 'records/',\r\n  timeout: 1000,\r\n  headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n})\r\n\r\n\r\nexport const getRecords = (id: string) => {\r\n  return instance.post(\"get\", { id: id })\r\n}\r\n\r\nexport const setRecords = (body: { points: number, id: string }) => {\r\n  return instance.post(\"set\", body)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nconst Description: React.FC = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        The essence of the game is as follows: On the field, on which \"cubes\" are located in random\r\n        order, there are colored\r\n        blocks. Cubes are removed from the field by hovering the cursor over the cube and then\r\n        clicking\r\n        the left mouse button.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Description;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport Description from \"./description\";\r\n//import Settings from \"./settings\";\r\n\r\ninterface IProps {\r\n  handleOpen: boolean,\r\n  handleClose: () => void,\r\n  body: string\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      top: `${50}%`,\r\n      left: `${50}%`,\r\n      transform: `translate(-${50}%, -${50}%)`,\r\n      position: 'absolute',\r\n      width: 400,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst Elements: any = {\r\n  Description: Description,\r\n}\r\n\r\n\r\nconst TransitionsModal: React.FC<IProps> = ({ handleOpen, handleClose, body }) => {\r\n  const classes = useStyles();\r\n  const Body = Elements[body];\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={handleOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className={classes.paper}>\r\n          {Body ? <Body /> : <p>ERROR: Modal window is not defined</p>}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransitionsModal;","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionsRecords, logoutActions } from \"../../../actions\";\r\nimport { getRecords, setRecords } from \"../../../api/records\";\r\nimport { iMadalState } from \"../../header/header\";\r\n\r\n\r\n\r\ninterface state {\r\n  setModal: React.Dispatch<React.SetStateAction<iMadalState>>,\r\n  modal: iMadalState\r\n}\r\n\r\nconst Settings: React.FC<state> = ({ setModal, modal }) => {\r\n  const { points } = useSelector((state: any) => state.game)\r\n  const { id } = useSelector((state: any) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      { modal.final ? <div className=\"final\">\r\n        <div className=\"final__body\">\r\n          <h2>game over</h2>\r\n\r\n          <p>Points: {points}</p>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n\r\n            setRecords({ id: id, points: points }).then(() => {\r\n              setModal({ ...modal, final: false });\r\n\r\n              getRecords(id).then(res => {\r\n\r\n                dispatch(actionsRecords(res.data.records, res.data.user))\r\n\r\n              }).catch(err => {\r\n                const { response } = err;\r\n\r\n                if (!response) return;\r\n\r\n                if (response?.status === 402) {\r\n                  dispatch(logoutActions())\r\n                  alert(\"ERROR: Not correct user token\")\r\n                } else {\r\n                  alert(\"servet error\")\r\n                }\r\n              })\r\n            }).catch(err => {\r\n              const { response } = err;\r\n\r\n              if (!response) return;\r\n\r\n              if (response?.status === 402) {\r\n                dispatch(logoutActions())\r\n                alert(\"ERROR: Not correct user token\")\r\n              } else {\r\n                alert(\"servet error\")\r\n              }\r\n            })\r\n          }}>Save</Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { setModal({ ...modal, final: false }) }}>Not save</Button>\r\n        </div>\r\n      </div> : \"\"}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport Modal from \"../modal\";\r\nimport Final from \"../modal/final\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { logoutActions, pauseAction, startAction } from \"../../actions\";\r\n\r\nconst settings = {\r\n  revers: true,\r\n  timeout: 5,\r\n}\r\n\r\nexport interface iMadalState { flag: boolean, view: string, final: boolean }\r\n\r\nconst Header: React.FC = () => {\r\n  const [modal, setModal] = useState<iMadalState>({ flag: false, view: \"Description\", final: false });\r\n\r\n  const [time, setTime] = useState<{ timeout: number, id: any }>({ timeout: 60, id: null });\r\n\r\n  useEffect(() => {\r\n    setTime({ ...time, timeout: settings.timeout });\r\n  }, [settings])\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { start, pause, points } = useSelector((state: any) => state.game)\r\n\r\n  const min = Math.floor(time.timeout / 60);\r\n  const sec = time.timeout % 60;\r\n\r\n  const timeSet = `${Math.floor(min / 10) ? min : \"0\" + min}:${Math.floor(sec / 10) ? sec : \"0\" + sec}`;\r\n\r\n  useEffect(() => {\r\n    if (!start || pause) {\r\n      clearTimeout(time.id);\r\n\r\n      return;\r\n    }\r\n\r\n    if (time.timeout === 0) {\r\n      clearTimeout(time.id);\r\n      setModal({ ...modal, final: true })\r\n      dispatch(startAction(false));\r\n\r\n      setTime({ timeout: 60, id: null });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (time.timeout === 0) return;\r\n      if (settings.revers) {\r\n        setTime({ ...time, timeout: time.timeout - 1 });\r\n      } else {\r\n        setTime({ ...time, timeout: time.timeout + 1 });\r\n      }\r\n    }, 1000)\r\n\r\n  }, [time, start, pause])\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Final modal={modal} setModal={setModal} />\r\n      <Modal body={modal.view} handleClose={(): void => setModal({ ...modal, flag: false })} handleOpen={modal.flag} />\r\n      <h1 className=\"header__title\">Kill The Cube</h1>\r\n      <div className=\"header__btn-gryp\">\r\n        <input type=\"text\" value={timeSet} disabled className=\"header__input\" />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(startAction(!start))}>{start ? \"END game\" : \"Start\"} </Button>\r\n        <Button variant=\"contained\" color=\"primary\" disabled={!start} onClick={() => dispatch(pauseAction(!pause))}>{pause ? \"Proceed\" : \"Stop\"}</Button>\r\n        <input type=\"text\" value={`${points} points`} disabled className=\"header__input\" />\r\n        <Button className=\"header__btn\" variant=\"contained\" color=\"primary\" onClick={() => setModal({ ...modal, view: \"Description\", flag: true })}>description</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => { dispatch(logoutActions()) }}>Logout</Button>\r\n      </div>\r\n      <img className=\"header__logo\" src=\"/logo.png\" alt=\"logo\" />\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst variants = ['green', 'blue', 'red'];\r\n\r\n\r\ninterface IProps {\r\n  variant: number,\r\n  hp: number,\r\n  id: number,\r\n  rotation: boolean,\r\n  coordinates: {\r\n    left: number,\r\n    top: number,\r\n  }\r\n}\r\n\r\nconst Cube: React.FC<IProps> = ({ variant, hp = 0, id, coordinates, rotation }) => {\r\n\r\n  return (\r\n    <div id={`${id}`} style={coordinates} className={`${variants[variant]} cube ${rotation ? \"rotation\" : \"\"}`}  >\r\n      {hp ? hp + 1 : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Cube;","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Cube from \"./cube\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { startAction, setPoints } from \"../../actions\";\r\n\r\ninterface ISize {\r\n  width: number,\r\n  heigth: number,\r\n}\r\n\r\ninterface ICube {\r\n  hp: number,\r\n  variant: number,\r\n  points: number,\r\n  coordinates: {\r\n    top: number,\r\n    left: number\r\n  }\r\n}\r\n\r\ninterface ISettings {\r\n  hp: number,\r\n  min: number,\r\n  max: number,\r\n  numberOptions: number,\r\n  time: number,\r\n}\r\n\r\nconst randomNumber = (max: number, min: number) => Math.round(Math.random() * (max - min) + min);\r\n\r\n\r\nconst deleteCube = (cubes: ICube[], id: number) => cubes.splice(id, 1);\r\n\r\n\r\nconst createCube = ({ width, heigth }: ISize, settings: ISettings): ICube => {\r\n  const hp = randomNumber(settings.hp - 1, 0);\r\n  const variant = randomNumber(settings.numberOptions - 1, 0);\r\n\r\n  return {\r\n    hp: hp,\r\n    variant: variant,\r\n    points: hp ? Math.round(hp * 0.5 + variant + 1) : variant + 1,\r\n    coordinates: {\r\n      left: randomNumber(width - 25, 25),\r\n      top: randomNumber(heigth - 25, 25),\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst addCube = (cubes: ICube[], size: ISize, settings: ISettings): ICube[] => {\r\n  const number = randomNumber(settings.max, settings.min);\r\n\r\n  while (cubes.length < number) {\r\n    cubes.push(createCube(size, settings));\r\n  }\r\n\r\n  return cubes;\r\n}\r\n\r\ninterface IState {\r\n  cubes: ICube[],\r\n  warning: boolean\r\n}\r\n\r\n\r\nconst GameField: React.FC = () => {\r\n  const [state, setState] = useState<IState>({\r\n    cubes: [],\r\n    warning: false\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { start, pause, points } = useSelector((state: any) => state.game)\r\n\r\n  const ref: any = useRef();\r\n\r\n  const getStart = () => {\r\n    setState({\r\n      cubes: addCube([], {\r\n        width: ref.current.clientWidth,\r\n        heigth: ref.current.clientHeight\r\n      }, settings),\r\n      warning: false,\r\n    })\r\n  }\r\n\r\n\r\n  const settings = {\r\n    hp: 2,\r\n    min: 1,\r\n    max: 6,\r\n    numberOptions: 3,\r\n    time: 60,\r\n    rotation: true\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (start) {\r\n      dispatch(setPoints(0))\r\n      getStart();\r\n    } else {\r\n      setState({\r\n        cubes: [],\r\n        warning: false\r\n      })\r\n    }\r\n  }, [start])\r\n\r\n  window.addEventListener('resize', () => {\r\n    if (start) {\r\n      dispatch(startAction(false))\r\n\r\n      setState({\r\n        cubes: [],\r\n        warning: true\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div ref={ref} className=\"gameField\" onClick={({ target }: any) => {\r\n      if (!target.id && target.id !== 0 || !start || pause) return;\r\n\r\n      const arr: ICube[] = [];\r\n\r\n      Object.assign(arr, state.cubes);\r\n\r\n      if (state.cubes[target.id].hp < 1) {\r\n\r\n        dispatch(setPoints(points + arr[target.id].points))\r\n\r\n        deleteCube(arr, target.id);\r\n\r\n        setState({\r\n          ...state,\r\n          cubes: addCube(arr,\r\n            {\r\n              width: ref.current.clientWidth,\r\n              heigth: ref.current.clientHeight\r\n            },\r\n            settings\r\n          )\r\n        })\r\n\r\n        return;\r\n      }\r\n\r\n      --arr[target.id].hp;\r\n\r\n      setState({\r\n        ...state,\r\n        cubes: arr\r\n      })\r\n    }}>\r\n      {state.cubes.map((el, index) => {\r\n        return <Cube hp={el.hp} rotation={settings.rotation} variant={el.variant} id={index} key={index} coordinates={el.coordinates} />\r\n      })}\r\n      {state.warning ? <p className=\"gameField__warning\">Warning: Please do not resize the window. if an error occurs reload the page</p> : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default GameField;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { iListRecords } from \"../../type\";\r\n\r\nconst Table: React.FC = () => {\r\n  const { records, user } = useSelector((state: any) => state.records)\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <p>Your name: {user?.name ?? \"\"}</p>\r\n      <p>Points: {user?.points ?? \"\"}</p>\r\n      <p>Rating</p>\r\n      {records.map((e: iListRecords, i: number) => {\r\n        return <p key={i}>{i + 1}.{e.name}: {e.points}</p>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Table;","import React, { useEffect } from \"react\";\r\nimport { getRecords } from \"../../api/records\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Header from \"../../components/header\";\r\nimport GameField from \"../../components/game-field\";\r\nimport Table from \"../../components/table\";\r\n\r\nimport \"./style.scss\"\r\nimport { logoutActions, actionsRecords } from \"../../actions\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  const { id } = useSelector((state: any) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getRecords(id).then(res => {\r\n\r\n        dispatch(actionsRecords(res.data.records, res.data.user))\r\n\r\n      }).catch(err => {\r\n        const { response } = err;\r\n\r\n        if (!response) return;\r\n\r\n        if (response?.status === 402) {\r\n          dispatch(logoutActions())\r\n        } else {\r\n          alert(\"servet error\")\r\n        }\r\n      })\r\n    }, 1000)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"mainSection\">\r\n        <GameField />\r\n        <Table />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default MainPage;","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport Login from \"../../pages/login\"\r\nimport Main from \"../../pages/main\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst App: React.FC = () => {\r\n  const { id } = useSelector((state: any) => state.auth)\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact >\r\n            {id ? \"\" : <Redirect to=\"/login\" />}\r\n            <Main />\r\n          </Route>\r\n\r\n          <Route path=\"/login\" exact>\r\n            {id ? <Redirect to=\"/\" /> : \"\"}\r\n            <Login />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { state, actionGame } from \"../type/\";\r\nimport { PAUSE, POINTS, START, TIME } from \"../utils/consts\";\r\n\r\nconst startState: state = {\r\n  start: false,\r\n  pause: false,\r\n  defult: true,\r\n  points: 0,\r\n  time: 0\r\n}\r\n\r\n\r\nconst gameReducer = (state: state = startState, action: actionGame) => {\r\n  switch (action.type) {\r\n    case START: {\r\n      return {\r\n        ...state,\r\n        pause: false,\r\n        start: action.status\r\n      }\r\n    }\r\n    case PAUSE: {\r\n      return {\r\n        ...state,\r\n        pause: action.status\r\n      }\r\n    }\r\n    case TIME: {\r\n      return {\r\n        ...state,\r\n        time: action.time\r\n      }\r\n    }\r\n    case POINTS: {\r\n      return {\r\n        ...state,\r\n        points: action.points\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default gameReducer;","import { actionAuth, stateAuth } from \"../type\";\r\nimport { LOGIN, LOGOUT } from \"../utils/consts\";\r\n\r\nconst startState = {\r\n  id: null\r\n}\r\n\r\nconst authReducer = (state: stateAuth = startState, action: actionAuth) => {\r\n  switch (action.type) {\r\n    case LOGOUT: {\r\n      return {\r\n        id: null\r\n      }\r\n    }\r\n    case LOGIN: {\r\n      return {\r\n        id: action.id\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { actionRecords, stateRecords } from \"../type\";\r\nimport { RECORDS } from \"../utils/consts\";\r\n\r\n\r\nconst startState = {\r\n  records: [],\r\n  user: null\r\n}\r\n\r\nconst recordsReducer = (state: stateRecords = startState, action: actionRecords) => {\r\n  switch (action.type) {\r\n    case RECORDS: {\r\n      return {\r\n        records: action.records,\r\n        user: action.user\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default recordsReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport gameReducer from \"./game\";\r\nimport authReducer from \"./auth\";\r\nimport recordsReducer from \"./records\";\r\n\r\nimport { reducer } from \"redux-form\";\r\n\r\nconst allReducer = combineReducers({\r\n  form: reducer,\r\n  game: gameReducer,\r\n  auth: authReducer,\r\n  records: recordsReducer,\r\n})\r\n\r\nexport default allReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, Store } from 'redux';\nimport reducers from \"./reducers\";\nimport { Provider } from 'react-redux';\n\n\nconst store: Store = createStore(reducers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}